.container {
  background-color: #eee;
}
.container-2 {
  background-color: #eee;
  max-width: 1000px; /*最大幅を固定*/
  margin-left: auto;
  margin-right: auto;
}
.container-3 {
  background-color: #eee;
  max-width: 1000px; /*最大幅を固定*/
  margin-left: auto;
  margin-right: auto;
}

img {
  max-width: 100%; /*画像自体の物理的な幅まで広がる*/
  /* width: 100%;  */ /*画像自体の物理的な幅を超えて、親要素の幅いっぱいまで広がる*/
  height: auto;
}

.row {
  display: flex;
}
.col2 {
  width: 50%;
  border: 1px dashed #999;
}

.row2 {
  display: flex;
  justify-content: space-between;
  max-width: 640px;
  margin: 0 auto;
  outline: 1px dashed #999;
}

.col2-2 {
  /* 子要素のサイズ　/ 親要素のcontent-boxのサイズ * 100% */
  width: calc((300 / 640) * 100%);
  background: #e7e7e7;
}

.row3 {
  display: flex;
  justify-content: space-between;
  max-width: 640px;
  margin: 0 auto;
  padding: 20px;
  display: flex;
}

.col2 {
  width: 50%;
  border: 1px dashed #999;
}

.row2 {
  display: flex;
  justify-content: space-between;
  max-width: 640px;
  margin: 0 auto;
  outline: 1px dashed #999;
}

.col2-2 {
  /* 子要素のサイズ　/ 親要素のcontent-boxのサイズ * 100% */
  width: calc((300 / 640) * 100%);
  background: #e7e7e7;
}

.row3 {
  display: flex;
  justify-content: space-between;
  max-width: 640px;
  margin: 0 auto;
  padding: 20px;
  outline: 1px dashed #999;
}

.col2-2 {
  /* 親640 padding 左右20 段落の間20 640-60 / 2 = 290  */
  width: calc((290 / 600) * 100%);
}

/* モバイルファースト */
/* 全てのデバイス向け　SP用のスタイル */
/* +は隣接兄弟セレクタ　モバイルファースト2とモバイルファースト3に適用される */
/* 前の要素と直後の要素が同じ親要素内で兄弟関係にあり、すぐに隣接している場合にマッチ */
.cardList__item + .cardList__item {
  margin-top: 30px;
}

/* PC用のスタイル　画面幅が768px以上の時に適用 */
/* printは印刷用。ないとモバイル用のレイアウトで出力される */
/* モバイルファーストの場合、ブレイクポイントを複数持たせる場合は値が小さい方から順に上書きされるように記述する。この記述の下に768px以上の記述を書く */
@media screen and (min-width: 768px), print {
  .cardList {
    display: flex;
    justify-content: space-between;
  }

  .cardList__item {
    width: calc((100%) / 3);
  }

  .cardList__item + .cardList__item {
    margin-top: 0;
  }
}

.case{
  max-width: 1000px;
  margin: 50px auto;
  padding: 30px;
  border: 1px solid #e7e7e7;
}
.case-item{
  margin: 30px 0;
}
.case-item * + * {
  margin-top: 15px;
}
.fz12{
  font-size: 12px;
}
.fz16{
  font-size: 16px;
}
/* 親要素に指定または、継承されている文字サイズを基準 */
/* 1em=12pxにも1em=16pxにもなりうる */
.indent-1{
  text-indent: 1em;
}

/* afterやbeforeがものすごく便利なのは「HTMLコードを汚すことなく様々な表現ができる」 */
/* beforeとafterの違い　<a>{before擬似要素}hoge{after擬似要素}</a> */
.arw::before{
  /* befreo、afterで描画するときのお決まり */
  content: "";
  /* ブロック→縦並び、横に広がる、高さと幅が指定可能 */
  /* インライン→横並び、文字の大きさや長さによって変化 */
  /* インラインブロック→横並び、高さや幅が自由に指定可能 */
  /* ダブルクォーテーション不要 */
  display: inline-block;
  width: 0.5em;
  height: 0.5em;
  margin-right: 0.5em;
  border-top: 2px solid;
  border-right: 2px solid;
  transform: rotate(45deg);
}

/*行送り：
行送りには例外的に単位なしの倍数を指定しますが、この場合は「em」として計算される仕様となっています。*/
.article {
  line-height: 2;
}

.rem-text{
  font-size: 1rem;
}
.px-text{
  font-size: 16px;
}

.rem-list li{
font-size: 1.125rem;
}

.em-list li{
  font-size: 1.125em;
}

.vw-box {
  width: 50vh;
  height: 50vh;
  background-color: #ccc;
}

/*vwで文字サイズ指定：
vwはビューポート幅に連動するので、文字サイズも画像のようになめらかに伸縮させることが可能です。折返しを発生させたくないタイポグラフィをテキストで実装する際に特に重宝します。*/
.vw-text{
  font-size: 5vw;
}

.min-text{
  /* 親要素の50%で伸縮、800以上にはならない */
  width: min(50%, 800px);
  background-color: #ccc;
}

.max-text{
  /* 親要素の50%で伸縮、300以下にはならない */
  width: max(50%,300px);
  background-color: #ccc;
}

.clamp-text{
  /* 親要素の50%で伸縮、150px以下にならない、800px以上にならない */
  width: clamp(150px,50%,800px);
  /*最小18px、最大36pxで画面幅に応じて伸縮  */
  font-size: clamp(18px,2.8vw,36px);
}

.btns{
  background-color: #e7e7e7;
}
.btns__item{
  margin: 10px;
  border: 1px dashed #999;
}
/* display inline */
.btn{
  /* aタグの初期のdisplayプロパティはinlineなのでpaddingは効くが上下のmarginが無効かつwidth/heightが無効 */
  width: 80%;
  max-width: 300px;
  padding: 15px;
  background-color: skyblue;
  border-radius: 8px;
  text-align: center;
  text-decoration: none;
}
.btn-2{
  display: block;
  width: 80%;
  max-width: 300px;
  padding: 15px;
  background-color: skyblue;
  border-radius: 8px;
  text-align: center;
  text-decoration: none;
}

.btns-3{
  background-color: #e7e7e7;
  text-align: center;
}
.btns__item-3{
  display: inline-block;
  margin: 10px;
  border: 1px dashed #999;
}

.btn-3{
  display: block;
  width: 80%;
  max-width: 300px;
  padding: 15px;
  background-color: skyblue;
  border-radius: 8px;
  text-align: center;
  text-decoration: none;
}
.btns-4{
  background-color: #e7e7e7;
  text-align: center;
}
.btns__item-4{
  display: inline-block;
  width: 80%;
  max-width: 300px;
  margin: 1px;
  border: 1px dashed #999;

}
.btn-4{
  display: block;
  background-color: skyblue;
  padding: 15px;
  border-radius: 8px;
  text-align: center;
  text-decoration: none;
}


.btns-5{
  background-color: #e7e7e7;
  display: flex;
  flex-direction: column;/*主軸方向を上から下に*/
  align-items: center;/*交差軸方向に中央揃え*/
}
.btns__item-5{
  width: 80%;
  max-width: 300px;
  margin: 1px;
  border: 1px dashed #999;

}
.btn-5{
  display: block;
  background-color: skyblue;
  padding: 15px;
  border-radius: 8px;
  text-align: center;
  text-decoration: none;
}
@media screen and (min-width:768px),print{
  .btns-5{
      flex-direction: row; /*主軸方向を左から右に*/
      justify-content: center;
  }
}
.container-4-1{
  max-width: 1440px;
  margin: 30px auto;
  padding: 0 20px;
}

.card-4-1{
  display: block;
  border: 1px solid #e7e7e7;
  border-radius: 5px;
  transition: transform .3s;
}
.card__thumb-4-1{
  /* はみ出した部分を隠す */
  overflow: hidden;
}
.card__thumb-4-1 img{
  max-width: none;
  width: 100%;
  border-radius: 5px 5px 0 0;
}

.card__txt-4-1{
  margin: 20px;
}
.card-4-1:hover{
  color: tomato;
}

.card-4-1:hover .card__thumb-4-1 img {
  transform: scale(1.1);
}

.cardList-4-1{
  display: flex;
  flex-direction: column; /* 縦並びにする*/
  margin-top: -20px; /* 一行目の上のマージンを相殺*/
}
.cardList__item-4-1{
  margin-top: 20px;
}
/* 2カラム*/
@media screen and (min-width: 768px),print {
  .cardList-4-1{
      flex-direction: row;/* 横並びにする*/
      justify-content: space-between;/*アイテムを両端に揃えて均等配置*/
      flex-wrap: wrap;/*折り返して複数行にする*/
  }
  .cardList__item-4-1{
      width: calc((100% - 20px) / 2)/*アイテムの幅を指定*/
  }
}

.container-4-2{
  max-width: 1440px;
  margin: 30px auto;
  padding: 0 20px;
}

.card-4-2{
  display: block;
  border: 1px solid #e7e7e7;
  border-radius: 5px;
  color: inherit; /*親の色を継承*/
  text-decoration: none;
  transition: coloer .3s;
}
.card__thumb-4-2{
  overflow: hidden;/*はみ出た部分は隠す*/
}
.card__thumb-4-2 img {
  max-width: none;
  width: 100%;
  border-radius: 5px 5px 0 0;
}
.card__txt-4-2{
  margin: 20px;
}
.card-4-2:hover{
  color: tomato;
}
.card-4-2:hover .card__thumb-4-2 img {
  transform: scale(1.1);
}

.cardList-4-2{
  display: flex;
  flex-direction: column;/*たて並び*/
  margin-top: -20px; /*1行目の上マージンを相殺 cardList__item-4-2のmargin-topを消す*/
}
.cardList__item-4-2{
  margin-top: 20px;
}
/*2カラム*/
@media screen and (min-width: 768px),print {
.cardList-4-2 {
  flex-direction: row; /*横並びにする*/
  justify-content: space-between; /*アイテムを両端に揃えて均等配置*/
  flex-wrap: wrap; /*折り返して複数行にする*/
}
.cardList__item-4-2 {
  width: calc((100% - 20px) / 2); /*アイテムの幅を指定*/
}
}

@media screen and (min-width: 992px),print {
  .cardList__item-4-2{
      width: calc((100% - 40px) / 3);
  }
  /* 要チェック */
  .cardList-4-2:after{/*最終行を左づめにする、末尾に同じ幅のアイテムを擬似的に配置*/
      content: "";
      display: block;
  width:  calc((100% - 40px) / 3);
  }
}


.container-4-3{
  max-width: 1440px;
  margin: 30px auto;
  padding: 0 20px;
}

.card-4-3{
  display: block;
  border: 1px solid #e7e7e7;
  border-radius: 5px;
  color: inherit;
  text-decoration: none;
  transition: color .3s;
}

.card__thumb-4-3{
  overflow: hidden;
}

.card__txt-4-3{
  margin: 20px;
}

.card__thumb-4-3 img{
  max-width: none;
  width: 100%;
  border-radius: 5px 5px 0 0;
}

.card-4-3:hover{
  color: tomato;
}

.card-4-3:hover .card__thumb-4-3 img {
  transform: scale(1.1);
}
.cardList-4-3{
  display: flex;
  /* 縦並び */
  flex-direction: column;
  /* 1行目の余白を相殺 */
  margin-top: -20px;
}
.cardList__item-4-3{
  margin-top: 20px;
}

/* ２カラム */
@media screen and (min-width: 768px), print{
  .cardList-4-3{
    /* 横並び */
    flex-direction: row;
    /* 両端に揃えて均等配置 */
    justify-content: space-between;
    /* 折り返して複数行に */
    flex-wrap: wrap;
  }
  .cardList__item-4-3{
    width: calc((100% - 20px) / 2);
  }
}

/* 3カラム */
@media screen and  (min-width: 992px), print{
  .cardList__item-4-3{
    width: calc((100% - 40px) / 3);
  }
  /* 最終行を左づめにする */
  .cardList-4-3:after{
    content:"";
    display: block;
    width: calc((100% - 40px) / 3);
  }
}

/* 4カラム after擬似要素、before擬似要素の2つで埋める。5カラム以上はspace-between以外のやり方を検討 */
@media screen and (min-width: 1200px), print{
  .cardList__item-4-3{
    width: calc((100% - 60px) / 4);
  }
  /* before擬似要素は要素の先頭に配置される */
  .cardList-4-3:before,
  /* 最終行を左づめ */
  .cardList-4-3::after{
    content:"";
    display: block;
    width: calc((100% - 60px) / 4);
  }
  /* 先頭に配置されているbefore擬似要素を末尾へ */
  /* orderが指定されていない場合は0番目なのでその次の1番目を指定すれば最後にいく */
  .cardList-4-3:before{
    order: 1;
  }
}
.container-4-5{
  max-width: 1440px;
  margin: 30px auto;
  padding: 0 20px;
}

.card-4-5{
  display: block;
  border: 1px solid #e7e7e7;
  border-radius: 5px;
  color: inherit;
  text-decoration: none;
  transition: color .3s;
}
.card__thumb-4-5{
  overflow: hidden;
}
.card__thumb-4-5 img {
  max-width: none;
  width: 100%;
  border-radius: 5px 5px 0 0;
}
.gnav{
  background: #e7e7e7;
}
.gnavList{
  display: flex;
  max-width: 1000px;
  margin: 0 auto;
  border-right: 1px solid #ccc;
}
.gnavList__item{
  width: 25%;
  border-left: 1px solid #ccc;
}
.gnavList__link{
  position: relative;
  display: block;
  padding: 1em 0;
  color: #000;
  font-weight: bold;
  font-size: 0.75rem;
  text-align: center;
  text-decoration: none;
  transition: background-color 0.3s;
}

.gnavList__link:hover{
  color: #509422;
}

@media screen and (min-width: 768px),print {
  .gnavList__link{
    font-size: 1rem;
  }
}
.hero{
  display: flex;
  justify-content: center;/*主軸が横の時左右中央揃え*/
  align-items: center;/*主軸が横の時の上下中央揃え*/
  height: 500px;
  background: #509422;
}
.hero__inner{
  display: flex;
  justify-content: center;
  align-items: center;
  width: 250px;
  height: 250px;
  border-radius: 50%;
  border: 2px solid #000;
  background: #fff;
}
.heror__txt{
  font-weight: bold;
  font-size: 20px;
}
.cardList__item-5-3{
  margin-top: 30px;
}

@media screen and (min-width:768px),print{
  .cardList-5-3{
    display: flex;
    margin-top: 30px;
  }
  .cardList._space-between{
    justify-content: space-between;
  }
  .cardList._space-around{
    justify-content: space-around;
  }
  .cardList._space-evenly{
    justify-content: space-evenly;
  }
  .cardList__item-5-3{
    width: calc((100% - 80px) / 3);
  }
}
.cardList03{
	display: flex;
	flex-direction: column; /*縦並び*/
	margin-top: -20px; /*1行目のマージンを相殺*/
}

.cardList03__item{
    margin-top: 20px;
}

@media screen and (min-width:768px),print{
    .cardList03{
        flex-direction: row;/*横並び*/
        flex-wrap: wrap;/*折り返して複数行にする*/
        margin-left: -20px;
    }
    .cardList03__item{
        margin-left: 20px;
        width: calc((100% - 40px) / 2);/*各列の左マージンの合計を差し引いて / 2*/
    }
}
@media screen and (min-width:992px),print{
    .cardList03__item{
        width: calc((100% - 60px) / 3);/*各列の左マージンの合計を差し引いて / 3*/
    }
}

@media screen and (min-width:1200px),print{
    .cardList03__item{
        width: calc((100% - 80px) / 4);/*各列の左マージンの合計を差し引いて / 4*/
    }
}

.cardList04{
    display: grid;
    gap: 20px;
}
@media screen and (min-width: 768px),print{
    .cardList04{
        grid-template-columns: repeat(2,1fr);
    }
}
/*repeat(繰り返し数,サイズ)*/
/*repeat(アイテム数,1fr)　→ grid-template-columnsで使う場合*/
/*repeat(行数,1fr)　→ grid-template-rowsで使う場合*/
/*fr fraction 分割、分数 gridレイアウトで使用できる単位*/
/*repeat gridの自動繰り返し配置*/
@media screen and (min-width: 992px),print{
    .cardList04{
        grid-template-columns: repeat(3,1fr);
    }
}
@media screen and (min-width: 1200px),print{
    .cardList04{
        grid-template-columns: repeat(4,1fr);
    }
}
.cardList05{
    display: grid;
    gap: 20px;/*アイテム間余白を20pxに*/
    /*minmaxは最小と最大値を同時に指定できる。最小336px,最大1fr(幅いっぱいまで)*/
    /*repeat(2,min-max(335px,1fr))となったときにコンテナに入り切らず、横スクロールが発生。カラムを移動させて複数行表示させるのがauto-fit*/
    grid-template-columns: repeat(auto-fit,minmax(334px,1fr));
    /*auto-fill→最小200pxのアイテムが5つ入るコンテナに対してアイテムが４つしかない場合に空白はそのままになる*/
    /*auto-fill→最小200pxのアイテムが5つ入るコンテナに対してアイテムが４つしかない場合にアイテムが拡張する*/
}


/* 聖杯レイアウト */
.container-5-4{
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 50px 1fr auto auto 50px;
    grid-template-areas:
        "header-5-4"
        "main-5-4"
        "lnav-5-4"
        "sidebar-5-4"
        "footer-5-4"
    ;
    gap: 20px;
    max-width: 1000px;
    min-width: 100vh;
    margin: 0 auto;
}
@media screen and (min-width:768px),print{
    .container-5-4{
        grid-auto-columns: 24% 1fr 24%;
        grid-template-rows: 100px 1fr 100px;
        grid-template-areas:
        "header-5-4 header-5-4 header-5-4"
        "lnav-5-4 main-5-4 sidebar-5-4"
        "footer-5-4 footer-5-4 footer-5-4"
    ;
    }
}
.header-5-4{
    grid-area: header-5-4;
    background: #509422;
}
.main-5-4{
    grid-area: main-5-4;
    background: #e5f3db;
}
.lnav-5-4{
    grid-area: lnav-5-4;
    background: #aeda90;
}
.sidebar-5-4{
    background: #aeda90;
    grid-area: sidebar-5-4;
}
.footer-5-4{
    background: #509422;
    grid-area: footer-5-4;
}